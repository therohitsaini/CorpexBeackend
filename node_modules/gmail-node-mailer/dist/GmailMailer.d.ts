import { gmail_v1 } from 'googleapis';
import { ISendEmailParams, ISendEmailResponse, IInitializeClientParams, IInitializeClientResult } from './types';
export declare class GmailMailer {
    private gmailClient;
    constructor(gmailClient?: gmail_v1.Gmail);
    initializeClient({ gmailServiceAccount, gmailServiceAccountPath, gmailSenderEmail, }: IInitializeClientParams): Promise<IInitializeClientResult>;
    /**
     * Orchestrates the process of sending an email by performing preliminary checks and then delegating the email
     * construction and sending tasks to `sendEmailFunction`. This function ensures that the necessary conditions are met
     * before attempting to send an email, including checking the initialization of the Gmail client, verifying the
     * presence of a sender email, and ensuring that the message content is not empty. It also sets a default subject
     * if none is provided.
     *
     * This high-level function is responsible for handling initial validations and configurations, making it an integral
     * part of an email delivery system that requires robustness and reliability, particularly in environments such as
     * customer support systems, automated notifications, or marketing campaigns.
     *
     * ### Parameters:
     * - `params` (ISendEmailParams): Contains the parameters required to send an email:
     *   - `senderEmail` (string, optional): Email address of the sender. Defaults to a pre-configured sender email if not provided.
     *   - `recipientEmail` (string): Email address of the recipient.
     *   - `subject` (string, optional): Subject of the email. Defaults to 'No Subject' if omitted.
     *   - `message` (string): Main content of the email, can be plain text or HTML formatted.
     *   - `attachments` (IAttachment[], optional): Array of attachments, each with a filename, mimeType, and base64-encoded content.
     *
     * ### Returns:
     * A `Promise<ISendEmailResponse>` that resolves to an object detailing the success or failure of the email operation:
     * - `sent` (boolean): Indicates whether the email was sent successfully.
     * - `status` (number, nullable): HTTP status code from the Gmail API, if available.
     * - `statusText` (string, nullable): Descriptive text corresponding to the HTTP status.
     * - `responseUrl` (string, nullable): URL of the Gmail API response, if available.
     * - `message` (string): Descriptive message about the outcome of the email operation.
     * - `gmailResponse` (any, nullable): Raw response payload from the Gmail API.
     *
     * ### Example Usage:
     * ```javascript
     * const emailParams = {
     *   senderEmail: 'sender@example.com',
     *   recipientEmail: 'recipient@example.com',
     *   subject: 'Welcome!',
     *   message: '<p>Thank you for joining us!</p>',
     *   attachments: [
     *     { filename: 'welcome.pdf', mimeType: 'application/pdf', content: 'base64-encoded-content' }
     *   ]
     * };
     *
     * const response = await sendEmail(emailParams);
     * console.log(response.message);
     * ```
     *
     * This function acts as a gateway, ensuring that all prerequisites are met before the email is sent, thus
     * maintaining the integrity and reliability of the email sending process within your application.
     */
    sendEmail(params: ISendEmailParams): Promise<ISendEmailResponse>;
}
